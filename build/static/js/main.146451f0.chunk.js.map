{"version":3,"sources":["shop/ProductPageConnector.js","data/Types.js","data/DataStore.js","data/CommonReducer.js","data/ShopReducer.js","data/CartReducer.js","data/AsyncMiddleware.js","data/Urls.js","data/ActionCreators.js","data/RestDataSource.js","ToggleLink.js","shop/CategoryNavigation.js","shop/ProductList.js","shop/CartSummary.js","PaginationButtons.js","PaginationControls.js","shop/Shop.js","data/CartActionCreators.js","shop/CartDetailsRows.js","shop/CartDetails.js","data/DataGetter.js","forms/ValidationError.js","forms/ValidationMessages.js","forms/ValidatedForm.js","shop/Checkout.js","shop/Thanks.js","shop/ShopConnector.js","App.js","serviceWorker.js","index.js"],"names":["PageComponent","DataTypes","PRODUCTS","CATEGORIES","ORDERS","ActionTypes","SportsStoreDataStore","createStore","_len","arguments","length","reducers","Array","_key","storeData","action","i","newStore","CommonReducer","_objectSpread2","type","Object","objectSpread","defineProperty","payload","dataType","data","concat","total","params","pageSize","sortKey","order","cart","cartItems","cartPrice","p","product","q","quantity","existing","find","item","id","toConsumableArray","price","map","diff","selection","filter","applyMiddleware","next","then","result","RestUrls","_RestUrls","dataSource","RestDataSource","err_handler","_this","this","classCallCheck","GetData","SendRequest","StoreData","method","url","Axios","request","error_handler","loadData","response","Number","headers","setPageSize","newSize","setSortProperty","newProp","placeOrder","ToggleLink","_Component","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","key","value","react_default","a","createElement","Route","path","props","to","exact","children","routeProps","baseClasses","className","activeClass","inActiveClass","combinedClasses","match","Link","Component","CategoryNavigation","Fragment","ToggleLink_ToggleLink","baseUrl","categories","cat","toLowerCase","ProductList","products","name","toFixed","description","onClick","addToCart","CartSummary","_getPrototypeOf2","args","call","getSummary","getLinkClasses","mapStateToProps","dataStore","mapDispatchToProps","mergeProps","actionCreators","router","currentPage","page","pageCount","Math","ceil","products_total","navigateToPage","history","push","category","PaginationButtons","getPageNumbers","keys","slice","reverse","v","current","navigate","disabled","num","PaginationControls","handlePageSizeChange","ev","target","handleSortPropertyChange","pageSizes","sizes","sortKeys","PaginationButtons_PaginationButtons","onChange","s","k","ProductPages","withRouter","connect","Shop","_args","handleAddToCart","_this$props","CartSummary_CartSummary","CategoryNavigation_CategoryNavigation","ProductList_ProductList","updateCartQuantity","removeFromCart","clearCart","CartDetailsRows","handleChange","event","updateQuantity","_this2","colSpan","CartDetails","CartDetailsRows_CartDetailsRows","DataGetter","componentDidUpdate","getData","componentDidMount","dsData","products_params","rtData","_limit","_sort","_page","category_like","ValidationError","errors","err","GetMessages","elem","messages","validity","valueMissing","typeMismatch","ValidatedForm","handleSubmit","setState","state","newState","validationErrors","values","formElements","forEach","checkValidity","assign","entries","e","submitCallback","registerRef","element","renderElement","modelItem","label","ValidationError_ValidationError","ref","defaultAttrs","attrs","formModel","m","cancelCallback","cancelText","submitText","Checkout","formData","product_id","handleCancel","required","ValidatedForm_ValidatedForm","Thanks","ShopActions","CartActions","ShopConnector","ds","_class2","selectComponent","wrap","Content","section","Redirect","Switch","from","render","App","es","store","BrowserRouter","component","Boolean","window","location","hostname","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.146451f0.chunk.js","sourcesContent":["import { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { setPageSize, setSortProperty } from \"../data/ActionCreators\";\n\nconst mapStateToProps = dataStore => dataStore;\nconst mapDispatchToProps = { setPageSize, setSortProperty };\n\nconst mergeProps = (dataStore, actionCreators, router) => ({\n    ...dataStore, ...router, ...actionCreators,\n    currentPage: Number(router.match.params.page),\n    pageCount: Math.ceil((dataStore.products_total \n        | dataStore.pageSize || 5)/(dataStore.pageSize || 5)),\n    navigateToPage: (page) => router.history\n        .push(`/shop/products/${router.match.params.category}/${page}`),    \n})\n\nexport const ProductPageConnector = (PageComponent) => \n    withRouter(connect(mapStateToProps, mapDispatchToProps, \n        mergeProps)(PageComponent))\n","export const DataTypes = {\n    PRODUCTS: \"products\",\n    CATEGORIES: \"categories\",\n    ORDERS: \"orders\"\n}\n\nexport const ActionTypes = {\n    DATA_LOAD: \"data_load\",\n    DATA_STORE: \"data_store\",\n    DATA_SET_SORT_PROPERTY: \"data_set_sort\",\n    DATA_SET_PAGESIZE: \"data_set_pagesize\",\n    CART_ADD: \"cart_add\",\n    CART_UPDATE: \"cart_update\",\n    CART_REMOVE: \"cart_delete\",\n    CART_CLEAR: \"cart_clear\"\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport { ShopReducer } from \"./ShopReducer\";\nimport { CartReducer } from \"./CartReducer\";\nimport { CommonReducer } from \"./CommonReducer\";\nimport { asyncActions } from \"./AsyncMiddleware\";\n\nexport const SportsStoreDataStore \n    = createStore(CommonReducer(ShopReducer, CartReducer), \n        applyMiddleware(asyncActions));\n","export const CommonReducer = (...reducers) => (storeData, action) => {\n    for (let i = 0; i < reducers.length; i++ ) {\n        let newStore = reducers[i](storeData, action);\n        if (newStore !== storeData) {\n            return newStore;\n        }\n    }    \n    return storeData;\n}\n","import { ActionTypes, DataTypes } from \"./Types\";\n\nexport const ShopReducer = (storeData, action) => {\n    switch(action.type) {\n        case ActionTypes.DATA_LOAD:\n            return { \n                ...storeData, \n                [action.payload.dataType]: action.payload.data,\n                [`${action.payload.dataType}_total`]: action.payload.total,\n                [`${action.payload.dataType}_params`]: action.payload.params\n            };\n        case ActionTypes.DATA_SET_PAGESIZE:\n            return { ...storeData, pageSize: action.payload }\n        case ActionTypes.DATA_SET_SORT_PROPERTY:\n            return { ...storeData, sortKey: action.payload }        \n        case ActionTypes.DATA_STORE:\n            if (action.payload.dataType === DataTypes.ORDERS) {\n                return { ...storeData, order: action.payload.data }\n            }\n            break;\n        default:\n            return storeData || {};\n    }\n}\n","import { ActionTypes } from \"./Types\";\n\nexport const CartReducer = (storeData, action) => {\n    let newStore = { cart: [], cartItems: 0, cartPrice: 0, ...storeData }\n    switch(action.type) {\n        case ActionTypes.CART_ADD: \n            const p = action.payload.product;\n            const q = action.payload.quantity;\n\n            let existing = newStore.cart.find(item => item.product.id === p.id);\n            if (existing) {\n                existing.quantity += q;\n            } else {\n                newStore.cart = [...newStore.cart, action.payload];\n            }\n            newStore.cartItems += q;\n            newStore.cartPrice += p.price * q;            \n            return newStore;\n\n        case ActionTypes.CART_UPDATE:\n            newStore.cart = newStore.cart.map(item => {\n                if (item.product.id === action.payload.product.id) {\n                    const diff = action.payload.quantity - item.quantity;\n                    newStore.cartItems += diff;\n                    newStore.cartPrice+= (item.product.price * diff);\n                    return action.payload;\n                } else {\n                    return item;\n                }\n            });\n            return newStore;\n\n        case ActionTypes.CART_REMOVE:\n            let selection = newStore.cart.find(item => \n                item.product.id === action.payload.id);\n            newStore.cartItems -= selection.quantity;\n            newStore.cartPrice -= selection.quantity * selection.product.price;\n            newStore.cart = newStore.cart.filter(item => item !== selection );\n            return newStore;\n\n        case ActionTypes.CART_CLEAR:\n            return { ...storeData, cart: [], cartItems: 0, cartPrice: 0}\n            \n        default:\n            return storeData || {};\n    }\n}\n","const isPromise = (payload) => \n    (typeof(payload) === \"object\" || typeof(payload) === \"function\")\n        && typeof(payload.then) === \"function\";\n\nexport const asyncActions = () => (next) => (action) => {\n    if (isPromise(action.payload)) {\n        action.payload.then(result => next({...action, payload: result}));\n    } else {\n        next(action)\n    }\n}\n","import { DataTypes } from \"./Types\";\n\nconst protocol = \"http\";\nconst hostname = \"localhost\";\nconst port = 3500;\n\nexport const RestUrls = {\n    [DataTypes.PRODUCTS]: `${protocol}://${hostname}:${port}/api/products`,\n    [DataTypes.CATEGORIES]: `${protocol}://${hostname}:${port}/api/categories`,\n    [DataTypes.ORDERS]: `${protocol}://${hostname}:${port}/api/orders`    \n}\n","import { ActionTypes, DataTypes } from \"./Types\";\nimport { RestDataSource } from \"./RestDataSource\";\n\nconst dataSource = new RestDataSource();\n\nexport const loadData = (dataType, params) => (\n    {\n        type: ActionTypes.DATA_LOAD,\n        payload: dataSource.GetData(dataType, params).then(response => \n             ({ dataType, \n                data: response.data, \n                total: Number(response.headers[\"x-total-count\"]),\n                params\n             })\n        )\n    })\n\nexport const setPageSize = (newSize) => {\n    return ({ type: ActionTypes.DATA_SET_PAGESIZE, payload: newSize});\n}\n\nexport const setSortProperty = (newProp) => \n    ({ type: ActionTypes.DATA_SET_SORT_PROPERTY, payload: newProp});\n\nexport const placeOrder = (order) => ({\n        type: ActionTypes.DATA_STORE, \n        payload: dataSource.StoreData(DataTypes.ORDERS, order).then(response => ({\n            dataType: DataTypes.ORDERS, data: response.data\n        }))\n    })\n","import Axios from \"axios\";\nimport { RestUrls } from \"./Urls\";\n\nexport class RestDataSource {\n\n    constructor(err_handler) {\n        this.error_handler = err_handler || (() => {});\n    }\n\n    GetData = (dataType, params) =>\n        this.SendRequest(\"get\", RestUrls[dataType], params);\n\n    StoreData = (dataType, data) => \n        this.SendRequest(\"post\", RestUrls[dataType], {}, data);\n\n    SendRequest = (method, url, params, data) =>\n        Axios.request({ method, url, params, data });\n}\n","import React, { Component } from \"react\";\nimport { Route, Link } from \"react-router-dom\";\n\nexport class ToggleLink extends Component {\n\n    render() {\n        return <Route path={ this.props.to } exact={ this.props.exact }\n                children={ routeProps => {\n            \n            const baseClasses = this.props.className || \"m-2 btn btn-block\";\n            const activeClass = this.props.activeClass || \"btn-primary\";\n            const inActiveClass = this.props.inActiveClass || \"btn-secondary\"\n\n            const combinedClasses = \n                `${baseClasses} ${routeProps.match ? activeClass : inActiveClass}`\n            \n            return <Link to={ this.props.to } className={ combinedClasses }>\n                        { this.props.children }\n                    </Link>\n         }} />\n    }\n}\n","import React, { Component } from \"react\";\nimport { ToggleLink } from \"../ToggleLink\";\n\nexport class CategoryNavigation extends Component {\n\n    render() {\n        return <React.Fragment>\n            <ToggleLink to={ `${this.props.baseUrl}/all` } exact={ false }>\n                All\n            </ToggleLink>                    \n            { this.props.categories && this.props.categories.map(cat => \n                <ToggleLink key={ cat }\n                    to={ `${this.props.baseUrl}/${cat.toLowerCase()}`}>\n                    { cat }\n                </ToggleLink>\n            )}   \n        </React.Fragment>\n    }\n}\n","import React, { Component } from \"react\";\n\nexport class ProductList extends Component {\n  render() {\n    if (this.props.products == null || this.props.products.length === 0) {\n      return <h5 className=\"p-2\">No Products</h5>;\n    }\n    return this.props.products.map((p) => (\n      <div className=\"card m-1 p-1 bg-light\" key={p.id}>\n        <h4>\n          <span className=\"font-weight-bold\">{p.name}</span>\n          <span className=\"badge badge-pill badge-primary float-right\">\n            ${p.price.toFixed(2)}\n          </span>\n        </h4>\n        <div className=\"card-text bg-white p-1\">\n          {p.description}\n          <button\n            className=\"btn btn-success btn-sm float-right\"\n            onClick={() => this.props.addToCart(p)}\n          >\n            Add To Cart\n          </button>\n        </div>\n      </div>\n    ));\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport class CartSummary extends Component {\n\n    getSummary = () => {\n        if (this.props.cartItems > 0) {\n            return <span>\n                { this.props.cartItems } item(s), \n                ${ this.props.cartPrice.toFixed(2)}\n            </span>\n        } else {\n            return <span>Your cart: (empty) </span>\n        }        \n    }\n\n    getLinkClasses = () => {\n        return `btn btn-sm bg-dark text-white \n            ${ this.props.cartItems === 0 ? \"disabled\": \"\"}`;\n    }\n\n    render() {\n        return <div className=\"float-right\">\n            <small>\n                 { this.getSummary() }            \n                <Link className={ this.getLinkClasses() } \n                        to=\"/shop/cart\">\n                    <i className=\"fa fa-shopping-cart\"></i>\n                </Link>                \n            </small>\n        </div>\n    }\n}\n","import React, { Component } from \"react\";\n\nexport class PaginationButtons extends Component {\n\n    getPageNumbers = () => {\n        if (this.props.pageCount < 4) {\n            return [...Array(this.props.pageCount + 1).keys()].slice(1);\n        } else if (this.props.currentPage <= 4) {     \n            return [1, 2, 3, 4, 5];\n        } else  if (this.props.currentPage > this.props.pageCount - 4) {\n            return [...Array(5).keys()].reverse()\n                .map(v => this.props.pageCount - v);\n        } else {\n            return [this.props.currentPage -1, this.props.currentPage,\n                this.props.currentPage + 1];\n        }        \n    }\n\n    render() {\n        const current = this.props.currentPage;\n        const pageCount = this.props.pageCount;\n        const navigate = this.props.navigate;\n        return <React.Fragment>\n            <button onClick={ () => navigate(current  - 1) }\n                disabled={ current === 1 } className=\"btn btn-secondary mx-1\">\n                    Previous\n            </button>\n            { current > 4 && \n                <React.Fragment>\n                    <button className=\"btn btn-secondary mx-1\" \n                        onClick={ () => navigate(1)}>1</button>\n                    <span className=\"h4\">...</span>\n                </React.Fragment>\n            }\n            { this.getPageNumbers().map(num => \n                <button className={ `btn mx-1 ${num === current \n                        ? \"btn-primary\": \"btn-secondary\"}`}\n                    onClick={ () => navigate(num)} key={ num }>\n                        { num }\n                </button>)}\n            { current <= (pageCount - 4) && \n                <React.Fragment>\n                    <span className=\"h4\">...</span>\n                    <button className=\"btn btn-secondary mx-1\" \n                            onClick={ () => navigate(pageCount)}>\n                        { pageCount }\n                    </button>\n                </React.Fragment>\n            }\n            <button onClick={ () => navigate(current + 1) }\n                disabled={ current === pageCount }\n                className=\"btn btn-secondary mx-1\">\n                    Next\n            </button>\n        </React.Fragment>        \n    }\n}\n","import React, { Component } from \"react\";\nimport { PaginationButtons } from \"./PaginationButtons\";\n\nexport class PaginationControls extends Component {\n\n    constructor(props) {\n        super(props);\n        this.pageSizes = this.props.sizes || [5, 10, 25, 100];\n        this.sortKeys = this.props.keys || [\"Name\", \"Price\"];\n    }\n\n    handlePageSizeChange = (ev) => {\n        this.props.setPageSize(ev.target.value);\n    }\n\n    handleSortPropertyChange = (ev) => { \n        this.props.setSortProperty(ev.target.value);\n    }\n\n    render() {\n        return <div className=\"m-2\">\n                <div className=\"text-center m-1\">            \n                    <PaginationButtons currentPage={this.props.currentPage} \n                        pageCount={this.props.pageCount} \n                        navigate={ this.props.navigateToPage }/>\n                </div>\n                <div className=\"form-inline justify-content-center\">\n                    <select className=\"form-control\"\n                            onChange={ this.handlePageSizeChange } \n                            value={ this.props.pageSize|| this.pageSizes[0] }>\n                        { this.pageSizes.map(s => \n                            <option value={s} key={s}>{s} per page</option>\n                        )}\n                    </select>\n                    <select className=\"form-control\"\n                            onChange={ this.handleSortPropertyChange } \n                            value={ this.props.sortKey || this.sortKeys[0] }>\n                        { this.sortKeys.map(k => \n                            <option value={k.toLowerCase()} key={k}>\n                                Sort By { k }\n                            </option>\n                        )}\n                    </select>\n            </div>\n        </div>\n    }\n}\n","import React, { Component } from \"react\";\nimport { CategoryNavigation } from \"./CategoryNavigation\";\nimport { ProductList } from \"./ProductList\";\nimport { CartSummary } from \"./CartSummary\";\nimport { ProductPageConnector } from \"./ProductPageConnector\";\nimport { PaginationControls } from \"../PaginationControls\";\n\nconst ProductPages = ProductPageConnector(PaginationControls);\n\nexport class Shop extends Component {\n\n    handleAddToCart = (...args) => {\n        this.props.addToCart(...args);\n        this.props.history.push(\"/shop/cart\");\n    }\n\n    render() {\n        return <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col bg-dark text-white\">\n                    <div className=\"navbar-brand\">SPORTS STORE</div>\n                    <CartSummary { ...this.props } />\n                </div>\n            </div>        \n            <div className=\"row\">\n                <div className=\"col-3 p-2\">\n                    <CategoryNavigation baseUrl=\"/shop/products\" \n                        categories={ this.props.categories } />\n                </div>\n                <div className=\"col-9 p-2\">\n                    <ProductPages />\n                    <ProductList products={ this.props.products } \n                        addToCart={ this.handleAddToCart } />\n                </div>\n            </div>\n        </div>\n    }\n}\n","import { ActionTypes} from \"./Types\";\n\nexport const addToCart = (product, quantity) => ({\n    type: ActionTypes.CART_ADD,\n    payload: {\n        product, \n        quantity: quantity || 1\n    }\n});\n\nexport const updateCartQuantity = (product, quantity) => ({\n    type: ActionTypes.CART_UPDATE,\n    payload: { product, quantity }\n})\n\nexport const removeFromCart = (product) => ({\n    type: ActionTypes.CART_REMOVE,\n    payload: product\n})\n\nexport const clearCart = () => ({\n    type: ActionTypes.CART_CLEAR\n})\n","import React, { Component } from \"react\";\n\nexport class CartDetailsRows extends Component {\n\n    handleChange = (product, event) => {\n        this.props.updateQuantity(product, event.target.value);\n    }\n\n    render() {\n        if (!this.props.cart || this.props.cart.length === 0) {\n            return <tr>\n                <td colSpan=\"5\">Your cart is empty</td>\n            </tr>\n        } else {\n            return <React.Fragment>\n                { this.props.cart.map(item =>\n                    <tr key={ item.product.id }>\n                        <td>\n                            <input type=\"number\" value={ item.quantity }\n                                onChange={ (ev) => \n                                    this.handleChange(item.product, ev) } />\n                        </td>\n                        <td>{ item.product.name }</td>\n                        <td>${ item.product.price.toFixed(2) }</td>\n                        <td>${ (item.quantity * item.product.price).toFixed(2) }</td>\n                        <td>\n                            <button className=\"btn btn-sm btn-danger\" \n                                onClick={ () => \n                                        this.props.removeFromCart(item.product)}>\n                                    Remove\n                                </button>\n                        </td>\n                    </tr>\n                )}\n                <tr>\n                    <th colSpan=\"3\" className=\"text-right\">Total:</th>\n                    <th colSpan=\"2\">${ this.props.cartPrice.toFixed(2) }</th>\n                </tr>\n            </React.Fragment> \n        }        \n    }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { CartDetailsRows } from \"./CartDetailsRows\";\n\nexport class CartDetails extends Component {\n\n    getLinkClasses = () => `btn btn-secondary m-1 \n        ${this.props.cartItems === 0 ? \"disabled\": \"\"}`;\n        \n    render() {\n        return <div className=\"m-3\">\n            <h2 className=\"text-center\">Your Cart</h2>\n            <table className=\"table table-bordered table-striped\">\n                <thead>\n                    <tr>\n                        <th>Quantity</th>\n                        <th>Product</th>\n                        <th className=\"text-right\">Price</th>\n                        <th className=\"text-right\">Subtotal</th>\n                        <th/>\n                    </tr>\n                </thead>\n                <tbody>\n                    <CartDetailsRows cart={ this.props.cart} \n                        cartPrice={ this.props.cartPrice }\n                        updateQuantity={ this.props.updateCartQuantity } \n                        removeFromCart={ this.props.removeFromCart } />\n                </tbody>\n            </table>\n            <div className=\"text-center\">\n                <Link className=\"btn btn-primary m-1\" to=\"/shop\">\n                    Continue Shopping\n                </Link>\n                <Link className={ this.getLinkClasses() } to=\"/shop/checkout\">\n                    Checkout                \n                </Link>\n            </div>\n        </div>\n    }\n}\n","import React, { Component } from \"react\";\nimport { DataTypes } from \"../data/Types\";\n\nexport class DataGetter extends Component {\n\n    render() {\n        return <React.Fragment>{ this.props.children }</React.Fragment>\n    }\n\n    componentDidUpdate = () => this.getData();\n    componentDidMount = () => this.getData();\n\n    getData = () => {\n        const dsData = this.props.products_params || {} ;\n        const rtData = {\n            _limit: this.props.pageSize || 5,\n            _sort: this.props.sortKey || \"name\",\n            _page: this.props.match.params.page || 1,\n            category_like: (this.props.match.params.category || \"\") === \"all\" \n                ? \"\" : this.props.match.params.category\n        }        \n        \n        if (Object.keys(rtData).find(key => dsData[key] !== rtData[key])) {\n            this.props.loadData(DataTypes.PRODUCTS, rtData);      \n        }\n    }\n}\n","import React, { Component } from \"react\";\n\nexport class ValidationError extends Component {\n\n    render() {\n        if (this.props.errors) {\n            return this.props.errors.map(err => \n                <h6 className=\"text-danger\" key={err}>\n                    { err }\n                </h6>\n            )\n        }\n        return null;\n    }\n}\n","export const GetMessages = (elem) => {\n    const messages = [];\n    if (elem.validity.valueMissing) {\n        messages.push(\"Value required\");\n    }\n    if (elem.validity.typeMismatch) {\n        messages.push(`Invalid ${elem.type}`);                        \n    }    \n    return messages;\n}\n","import React, { Component } from \"react\";\nimport { ValidationError } from \"./ValidationError\";\nimport { GetMessages } from \"./ValidationMessages\";\n\nexport class ValidatedForm extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            validationErrors: {}\n        }\n        this.formElements = {};\n    }\n\n    handleSubmit = () => {\n        this.setState(state => {\n            const newState = { ...state, validationErrors: {} } \n            Object.values(this.formElements).forEach(elem => {\n                if (!elem.checkValidity()) {               \n                    newState.validationErrors[elem.name] = GetMessages(elem);\n                }\n            })           \n            return newState;\n        }, () => {\n            if (Object.keys(this.state.validationErrors).length === 0) {\n                const data =  Object.assign(...Object.entries(this.formElements)\n                    .map(e => ({[e[0]]: e[1].value})) )\n                this.props.submitCallback(data);\n            }\n        });\n    }\n\n    registerRef = (element) => {\n        if (element !== null) {\n            this.formElements[element.name] = element;\n        }\n    }\n\n    renderElement = (modelItem) => {\n        const name = modelItem.name || modelItem.label.toLowerCase();\n        return <div className=\"form-group\" key={ modelItem.label }>\n            <label>{ modelItem.label }</label>\n            <ValidationError errors={ this.state.validationErrors[name] } />\n            <input className=\"form-control\" name={ name } ref={ this.registerRef }\n                { ...this.props.defaultAttrs } { ...modelItem.attrs } />            \n        </div>\n    }\n\n    render() {\n        return <React.Fragment>\n            { this.props.formModel.map(m => this.renderElement(m))}\n            <div className=\"text-center\">\n                <button className=\"btn btn-secondary m-1\" \n                        onClick={ this.props.cancelCallback }>\n                    { this.props.cancelText || \"Cancel\" }\n                </button>\n                <button className=\"btn btn-primary m-1\" \n                        onClick={ this.handleSubmit }>\n                    { this.props.submitText || \"Submit\"}\n                </button>         \n            </div>\n        </React.Fragment>\n    }\n}\n","import React, { Component } from \"react\";\nimport { ValidatedForm } from \"../forms/ValidatedForm\";\n\nexport class Checkout extends Component {\n\n    constructor(props) {\n        super(props);\n        this.defaultAttrs = { type: \"text\", required: true };\n        this.formModel = [\n                { label: \"Name\"},\n                { label: \"Email\", attrs: { type: \"email\" }}, \n                { label: \"Address\" }, \n                { label: \"City\"}, \n                { label: \"Zip/Postal Code\", name: \"zip\"}, \n                { label: \"Country\"}]\n    }\n\n    handleSubmit = (formData) => {\n        const order = { ...formData, products: this.props.cart.map(item => \n            ({  quantity: item.quantity, product_id: item.product.id})) }\n        this.props.placeOrder(order);\n        this.props.clearCart();\n        this.props.history.push(\"/shop/thanks\");\n    }\n\n    handleCancel = () => {\n        this.props.history.push(\"/shop/cart\");\n    }\n\n    render() {\n        return <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col bg-dark text-white\">\n                    <div className=\"navbar-brand\">SPORTS STORE</div>\n                </div>\n            </div>        \n            <div className=\"row\">\n                <div className=\"col m-2\">\n                    <ValidatedForm formModel={ this.formModel } \n                        defaultAttrs={ this.defaultAttrs } \n                        submitCallback={ this.handleSubmit } \n                        cancelCallback={ this.handleCancel } \n                        submitText=\"Place Order\" \n                        cancelText=\"Return to Cart\" />\n                </div>    \n            </div>        \n        </div>\n    }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport class Thanks extends Component {\n\n    render() {\n        return <div>\n            <div className=\"col bg-dark text-white\">\n                <div className=\"navbar-brand\">SPORTS STORE</div>\n            </div>\n            <div className=\"m-2 text-center\">\n                <h2>Thanks!</h2>\n                <p>Thanks for placing your order.</p>\n                <p>Your order is #{ this.props.order ? this.props.order.id : 0 }</p>\n                <p>We'll ship your goods as soon as possible.</p>\n                <Link to=\"/shop\" className=\"btn btn-primary\">\n                    Return to Store\n                </Link>\n            </div>\n        </div>\n    }\n}\n","import React, { Component } from \"react\";\nimport { Switch, Route, Redirect } \n    from \"react-router-dom\"\nimport { connect } from \"react-redux\";\nimport * as ShopActions from \"../data/ActionCreators\";\nimport { DataTypes } from \"../data/Types\";\nimport { Shop } from \"../shop/Shop\";\nimport  * as CartActions from \"../data/CartActionCreators\";\nimport { CartDetails } from \"../shop/CartDetails\";\nimport { DataGetter } from \"../data/DataGetter\";\nimport { Checkout } from \"../shop/Checkout\";\nimport { Thanks } from \"../shop/Thanks\";\n\nconst mapDispatchToProps = { ...ShopActions, ...CartActions};\n\nexport const ShopConnector = connect(ds => ds, mapDispatchToProps)(\n    class extends Component {\n\n        selectComponent = (routeProps) => {            \n            const wrap = (Component, Content) => \n                <Component { ...this.props}  { ...routeProps}>\n                    { Content && wrap(Content)}\n                </Component>            \n            switch (routeProps.match.params.section) {\n                case \"products\": \n                    return wrap(DataGetter, Shop);\n                case \"cart\":\n                    return wrap(CartDetails);\n                case \"checkout\": \n                    return wrap(Checkout);\n                case \"thanks\":\n                    return wrap(Thanks);\n                default:\n                    return <Redirect to=\"/shop/products/all/1\" />\n            }\n        }\n\n        render() {\n            return <Switch>\n                <Redirect from=\"/shop/products/:category\" \n                    to=\"/shop/products/:category/1\" exact={ true } />                \n                <Route path={ \"/shop/:section?/:category?/:page?\"}\n                    render = { routeProps => this.selectComponent(routeProps) } />  \n            </Switch>          \n        }\n\n        componentDidMount = () => this.props.loadData(DataTypes.CATEGORIES);\n    }\n)\n","import React, { Component } from \"react\";\nimport { SportsStoreDataStore } from \"./data/DataStore\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } \n    from \"react-router-dom\";\nimport { ShopConnector } from \"./shop/ShopConnector\";\n\nexport default class App extends Component {\n\n    render() {\n        return <Provider store={ SportsStoreDataStore }>\n            <Router>\n                <Switch>\n                    <Route path=\"/shop\" component={ ShopConnector } />\n                    <Redirect to=\"/shop\" />\n                </Switch>\n            </Router>\n        </Provider>\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";     \n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}